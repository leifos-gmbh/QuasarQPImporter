<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <!-- header -->
    <xsl:output method="xml" indent="yes" encoding="UTF-8"/>
    <xsl:output doctype-system="ims_qtiasiv1p2p1.dtd"></xsl:output>

    <xsl:param name="ilias_version" select="default" />
    <xsl:param name="user" select="default" />

    <xsl:template match="dataroot">

        <xsl:comment>Generated by Quasar Importer Plugin</xsl:comment>
        <xsl:comment>All question ID are 5 digits long</xsl:comment>
        <xsl:comment>Titles are: Ref1_Subject + "_" + Ref1_Objective + "." + SA_MA ({SÂ¦M}) + "_L" + QTax + "_" + Q-ID (5-stellig)</xsl:comment>
        <xsl:comment>Descriptions are: "QUASAR_" + $title</xsl:comment>
        <xsl:comment>Max Attemps are always 0</xsl:comment>
        <xsl:comment>All QTax are multiplied by 3</xsl:comment>

        <questestinterop>
        <!-- Question loop -->

        <xsl:for-each select="Question-Data_APPROVED_Export | FinalReport_APPROVED_Q-Data_x005F_xx_ALL">
            <!-- ID's are always 5 digits. -->
            <xsl:variable name="id" select="format-number((Q-ID | Questions.Q-ID), '00000')"/>
            <xsl:variable name="ref1_subject" select="Ref1_Subject"/>
            <xsl:variable name="ref1_objective" select="Ref1_Objective"/>
            <xsl:variable name="question_text" select="Question_Text" />
            <xsl:variable name="maxattempts" select="0" />
            <xsl:variable name="question_type" select="SA_MA" />
            <xsl:variable name="qtax" select="QTax" />
            <xsl:variable name="num_answers" select ="Ctrl_Used" />
            <xsl:variable name="ident">
                <xsl:value-of select="concat('il_0_qst_',$id)" />
            </xsl:variable>

            <xsl:variable name="title">
                <xsl:choose>
                    <xsl:when test="$question_type = 'sa'">
                        <xsl:value-of select="concat($ref1_subject,'_',$ref1_objective,'.S_L',$qtax,'_',$id)" />
                    </xsl:when>
                    <xsl:when test="$question_type = 'ma'">
                        <xsl:value-of select="concat($ref1_subject,'_',$ref1_objective,'.M_L',$qtax,'_',$id)" />
                    </xsl:when>
                </xsl:choose>
            </xsl:variable>

            <item>
                <xsl:attribute name="ident">
                    <xsl:value-of select="$ident" />
                </xsl:attribute>

                <xsl:attribute name="title">
                    <xsl:value-of select="$title" />
                </xsl:attribute>

                <xsl:attribute name="maxattempts">
                    <xsl:value-of select="$maxattempts" />
                </xsl:attribute>

                <qticomment>
                    <xsl:value-of select="concat('QUASAR_',$title)" />
                </qticomment>
                <!-- 1 minute by default -->
                <duration>P0Y0M0DT0H1M0S</duration>

                <itemmetadata>
                    <qtimetadata>

                        <qtimetadatafield>
                            <fieldlabel>ILIAS_VERSION</fieldlabel>
                            <fieldentry><xsl:value-of select="$ilias_version"/></fieldentry>
                        </qtimetadatafield>
                        <qtimetadatafield>
                            <fieldlabel>QUESTIONTYPE</fieldlabel>
                                <xsl:if test="$question_type = 'sa'">
                                    <fieldentry>SINGLE CHOICE QUESTION</fieldentry>
                                </xsl:if>
                                <xsl:if test="$question_type = 'ma'">
                                    <fieldentry>MULTIPLE CHOICE QUESTION</fieldentry>
                                </xsl:if>
                        </qtimetadatafield>

                        <qtimetadatafield>
                            <fieldlabel>AUTHOR</fieldlabel>
                            <fieldentry><xsl:value-of select="$user"/></fieldentry>
                        </qtimetadatafield>

                        <qtimetadatafield>
                            <fieldlabel>additional_cont_edit_mode</fieldlabel>
                            <fieldentry>default</fieldentry>
                        </qtimetadatafield>

                        <qtimetadatafield>
                            <fieldlabel>externalId</fieldlabel>
                            <!--
                                Here Ilias is putting ID's Like: 58c6a1e5d79641.65389599
                                We are using QUID from Quasar
                             -->
                            <fieldentry>
                                <xsl:value-of select="$id" />
                            </fieldentry>
                        </qtimetadatafield>

                        <qtimetadatafield>
                            <fieldlabel>thumb_size</fieldlabel>
                            <fieldentry/>
                        </qtimetadatafield>

                        <qtimetadatafield>
                            <fieldlabel>feedback_setting</fieldlabel>
                            <!--
                                Where is this value coming from?: 1,2....
                                Forced to 1
                            -->
                            <fieldentry>1</fieldentry>
                        </qtimetadatafield>

                    </qtimetadata>
                </itemmetadata>

                <presentation>
                    <xsl:attribute name="label">
                        <xsl:value-of select="$title" />
                    </xsl:attribute>
                    <flow>
                        <material>
                            <mattext texttype="text/plain"><xsl:value-of select="$question_text"/></mattext>
                        </material>

                        <response_lid>
                            <xsl:if test="$question_type = 'sa'">
                                <xsl:attribute name="ident">MCSR</xsl:attribute>
                                <xsl:attribute name="rcardinality">Single</xsl:attribute>
                            </xsl:if>
                            <xsl:if test="$question_type = 'ma'">
                                <xsl:attribute name="ident">MCMR</xsl:attribute>
                                <xsl:attribute name="rcardinality">Multiple</xsl:attribute>
                            </xsl:if>

                            <render_choice shuffle="Yes">

                                <!-- ANSWERS -->
                                <xsl:for-each select="*[starts-with(name(), 'Answ')]">
                                    <xsl:if test="contains ((position() div 2),'.') = '0'">
                                        <response_label>
                                            <xsl:attribute name="ident">
                                                <xsl:value-of select="format-number(round(position() div 2 - 1),'0')" />
                                            </xsl:attribute>

                                            <material>
                                                <mattext texttype="text/plain">
                                                    <xsl:value-of select="." />
                                                </mattext>
                                            </material>
                                        </response_label>
                                    </xsl:if>
                                </xsl:for-each>
                            </render_choice>

                        </response_lid>
                    </flow>
                </presentation>

                <!-- evaluation -->
                <resprocessing>
                    <outcomes>
                        <decvar></decvar>
                    </outcomes>

                    <xsl:for-each select="*[starts-with(name(), 'Answ')]">
                        <xsl:if test="contains ((position() div 2),'.') != '0'">
                                <xsl:choose>
                                    <!-- points for single answer -->
                                    <xsl:when test="$question_type = 'sa'">
                                        <respcondition continue="Yes">
                                            <conditionvar>
                                                <varequal><xsl:attribute name="respident">MCSR</xsl:attribute><xsl:value-of select="format-number(round(position() div 2 - 1),'0')" /></varequal>
                                            </conditionvar>
                                            <setvar action="Add">
                                                <xsl:choose>
                                                    <xsl:when test=". = 'true'">
                                                        <xsl:value-of select="$qtax * 3" />
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                        <xsl:text>0</xsl:text>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </setvar>
                                            <displayfeedback feedbacktype="Response">
                                                <xsl:attribute name="linkrefid">
                                                    <xsl:value-of select="concat('response_',format-number(round(position() div 2 - 1),'0'))" />
                                                </xsl:attribute>
                                            </displayfeedback>
                                        </respcondition>
                                    </xsl:when>
                                    <!-- points for multiple answer -->
                                    <xsl:otherwise>

                                        <xsl:variable name="points" select="$qtax * 3 div $num_answers" />
                                        <respcondition continue="Yes">
                                            <conditionvar>
                                                <varequal><xsl:attribute name="respident">MCMR</xsl:attribute><xsl:value-of select="format-number(round(position() div 2 - 1),'0')" /></varequal>
                                            </conditionvar>
                                            <setvar action="Add">
                                                <xsl:choose>
                                                    <xsl:when test=". = 'true'">
                                                        <xsl:value-of select="$points" />
                                                    </xsl:when>
                                                    <xsl:otherwise>0</xsl:otherwise>
                                                </xsl:choose>
                                            </setvar>
                                            <displayfeedback feedbacktype="Response">
                                                <xsl:attribute name="linkrefid">
                                                    <xsl:value-of select="concat('response_',format-number(round(position() div 2 - 1),'0'))" />
                                                </xsl:attribute>
                                            </displayfeedback>
                                        </respcondition>
                                        <respcondition continue="Yes">
                                            <conditionvar>
                                                <not>
                                                    <varequal><xsl:attribute name="respident">MCMR</xsl:attribute><xsl:value-of select="format-number(round(position() div 2 - 1),'0')" /></varequal>
                                                </not>
                                            </conditionvar>
                                            <setvar action="Add">
                                                <xsl:choose>
                                                    <xsl:when test=". = 'true'">0</xsl:when>
                                                    <xsl:otherwise>
                                                        <xsl:value-of select="$points" />
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                            </setvar>
                                            <displayfeedback feedbacktype="Response">
                                                <xsl:attribute name="linkrefid">
                                                    <xsl:value-of select="concat('response_',format-number(round(position() div 2 - 1),'0'))" />
                                                </xsl:attribute>
                                            </displayfeedback>
                                        </respcondition>
                                    </xsl:otherwise>
                                </xsl:choose>
                        </xsl:if>
                    </xsl:for-each>
                </resprocessing>

                <!--foreach for the itemfeedback: It seems that the import does not need this extra nodes.-->
                <!-- its always N times like this:-->
                <!--
                    <itemfeedback ident="response_0" view="All">
                        <flow_mat>
                            <material>
                                <mattext texttype="text/plain">
                                </mattext>
                            </material>
                        </flow_mat>
                    </itemfeedback>

                    <itemfeedback ident="response_1"...
                -->

            </item>

        </xsl:for-each>

        </questestinterop>

    </xsl:template>

</xsl:stylesheet>
